{"ast":null,"code":"var _jsxFileName = \"/Users/chchen/Andy\\u66AB\\u5B58/JS_ReactUdemy/project_2/Route_pratice/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Fragment } from \"react\"; // import Test from \"./Test\";\n\nimport useHttp from '../';\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning React is fun\"\n}, {\n  id: \"q2\",\n  author: \"Maxis\",\n  text: \"Learning React is great\"\n}];\n\nconst QuotesDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  console.log(match);\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuotesDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = QuotesDetail;\nexport default QuotesDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesDetail\");","map":{"version":3,"names":["useParams","Route","Link","useRouteMatch","Fragment","useHttp","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuotesDetail","match","params","console","log","quote","find","quoteId","path","url"],"sources":["/Users/chchen/Andy暫存/JS_ReactUdemy/project_2/Route_pratice/src/pages/QuoteDetail.js"],"sourcesContent":["import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Fragment } from \"react\";\n// import Test from \"./Test\";\nimport useHttp from '../'\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun\" },\n  { id: \"q2\", author: \"Maxis\", text: \"Learning React is great\" },\n];\n\nconst QuotesDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  console.log(match);\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  if (!quote) {\n    return <p>No quote found!</p>;\n  }\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n      {/* <Route path={`/quotes/${params.quoteId}/comments`}> */}\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuotesDetail;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,KAApB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAGA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,KAApB;EAA2BC,IAAI,EAAE;AAAjC,CADmB,EAEnB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,OAApB;EAA6BC,IAAI,EAAE;AAAnC,CAFmB,CAArB;;AAKA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAMC,KAAK,GAAGV,aAAa,EAA3B;EACA,MAAMW,MAAM,GAAGd,SAAS,EAAxB;EAEAe,OAAO,CAACC,GAAR,CAAYH,KAAZ;EACA,MAAMI,KAAK,GAAGT,YAAY,CAACU,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACR,EAAN,KAAaK,MAAM,CAACK,OAAjD,CAAd;;EAEA,IAAI,CAACF,KAAL,EAAY;IACV,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEA,KAAK,CAACN,IAA9B;MAAoC,MAAM,EAAEM,KAAK,CAACP;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,IAAI,EAAEG,KAAK,CAACO,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,GAAEP,KAAK,CAACQ,GAAI,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eASE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAER,KAAK,CAACO,IAAK,WAA3B;MAAA,uBAEE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA1BD;;GAAMR,Y;UACUT,a,EACCH,S;;;KAFXY,Y;AA4BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}