{"ast":null,"code":"var _jsxFileName = \"/Users/chchen/Andy\\u66AB\\u5B58/JS_ReactUdemy/project_2/Route_pratice/src/components/quotes/QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc'; // console.log(queryParams);\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    // history.push(match.path+'?sort='+ (isSortingAscending ? 'desc' : 'asc'));\n    history.push(location.pathname + '?sort=' + (isSortingAscending ? 'desc' : 'asc')); //history.push可以有更易讀的方式。\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"lnX36E63fQVKeWsbRx0lhzwlToo=\", false, function () {\n  return [useHistory, useLocation, useRouteMatch];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","useRouteMatch","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","match","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","push","pathname","sorting","list","map","quote","author","text"],"sources":["/Users/chchen/Andy暫存/JS_ReactUdemy/project_2/Route_pratice/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useHistory, useLocation,useRouteMatch } from 'react-router-dom'\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n  const queryParams = new URLSearchParams(location.search);\n  \n  const isSortingAscending = queryParams.get('sort') === 'asc'\n  // console.log(queryParams);\n  \n  const sortedQuotes = sortQuotes(props.quotes,isSortingAscending)\n\n  const changeSortingHandler = () => {\n    // history.push(match.path+'?sort='+ (isSortingAscending ? 'desc' : 'asc'));\n    history.push(location.pathname+'?sort='+ (isSortingAscending ? 'desc' : 'asc'));\n    //history.push可以有更易讀的方式。\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAiCC,aAAjC,QAAsD,kBAAtD;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;EACxC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;IACrC,IAAIH,SAAJ,EAAe;MACb,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD,CAFD,MAEO;MACL,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD;EACF,CANM,CAAP;AAOD,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,OAAO,GAAGd,UAAU,EAA1B;EACA,MAAMe,QAAQ,GAAGd,WAAW,EAA5B;EACA,MAAMe,KAAK,GAAGd,aAAa,EAA3B;EACA,MAAMe,WAAW,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAApB;EAEA,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD,CAN2B,CAO3B;;EAEA,MAAMC,YAAY,GAAGjB,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAcc,kBAAd,CAA/B;;EAEA,MAAMG,oBAAoB,GAAG,MAAM;IACjC;IACAT,OAAO,CAACU,IAAR,CAAaT,QAAQ,CAACU,QAAT,GAAkB,QAAlB,IAA6BL,kBAAkB,GAAG,MAAH,GAAY,KAA3D,CAAb,EAFiC,CAGjC;EACD,CAJD;;EAMA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,SAAS,EAAEhB,OAAO,CAACsB,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEH,oBAAjB;QAAA,oBAA6CH,kBAAkB,GAAG,YAAH,GAAkB,WAAjF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAI,SAAS,EAAEhB,OAAO,CAACuB,IAAvB;MAAA,UACGL,YAAY,CAACM,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAAClB,EAFZ;QAGE,MAAM,EAAEkB,KAAK,CAACC,MAHhB;QAIE,IAAI,EAAED,KAAK,CAACE;MAJd,GACOF,KAAK,CAAClB,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAlCD;;GAAMC,S;UACYZ,U,EACCC,W,EACHC,a;;;KAHVU,S;AAoCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}